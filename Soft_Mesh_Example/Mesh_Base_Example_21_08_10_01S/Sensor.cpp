#include "Sensor.h"
#include "Globals.h"
#include "Settings.h"
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
float proportion(float x, float in_min, float in_max, float out_min, float out_max) 
{
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SensorClass Sensor;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SensorClass::SensorClass()
{
  
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void SensorClass::setup()
{
  
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
uint16_t SensorClass::read()
{
  return analogRead(SENSOR_PIN);  
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SensorData SensorClass::compute()
{
  float val = read();
  
  float zeroPercents = Settings.Get0_O2Value();
  float maxPercents = Settings.Get20_9_O2Value();

  // пропорция: zeroPercents - 0% o2, maxPercents - 20.9% o2
  float computed = 0.0f;
  SensorData data;
  data.HasValue = false;
  
  if(maxPercents > 0 && maxPercents > zeroPercents) // рассчитываем, только если заданы калибровочные коэффициенты, и один больше другого (защита от дурака)
  {
    computed = proportion(val,zeroPercents,maxPercents,0.0f, 20.9f);
    data.HasValue = true;
  }

  uint32_t computedU = computed*100;

  
  data.Value = computedU/100;
  data.Fract = computedU%100;
  
  return data;
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------


